##stringtype C
##shortstrings
/***************************************************************************

 TheBar.mcc - Next Generation Toolbar MUI Custom Class
 Copyright (C) 2003-2005 Alfonso Ranieri
 Copyright (C) 2005-2009 by TheBar.mcc Open Source Team

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 TheBar class Support Site:  http://www.sf.net/projects/thebar

 $Id$

***************************************************************************/

/*
** This file was created automatically by flexcat.
** It is written to be compatible with catcomp,
** so you choose, but... Do NOT edit by hand!
**/

#ifndef _LOC_H
#define _LOC_H

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif

#ifdef CATCOMP_ARRAY
	#undef CATCOMP_NUMBERS
	#define CATCOMP_NUMBERS
    #undef CATCOMP_STRINGS
	#define CATCOMP_STRINGS
#endif

/****************************************************************************/

#ifdef CATCOMP_NUMBERS

#define %i %dL

#endif /* CATCOMP_NUMBERS */

/****************************************************************************/

#ifdef CATCOMP_STRINGS

const unsigned char %i_STR[] = %s;

#endif /* CATCOMP_STRINGS */

/****************************************************************************/

#ifdef CATCOMP_ARRAY

struct CatCompArrayType
{
    LONG   cca_ID;
    STRPTR cca_Str;
};

static struct CatCompArrayType CatCompArray[] =
{
    {%i,(STRPTR)(%i_STR)},
    {0,NULL} /* Yes, I know about %%%(,); I just like it this way. */
};

#endif /* CATCOMP_ARRAY */

/****************************************************************************/

#endif /* _LOC_H */
