##stringtype C
##shortstrings
/***************************************************************************

 TheBar.mcc - Next Generation Toolbar MUI Custom Class
 Copyright (C) 2003-2005 Alfonso Ranieri
 Copyright (C) 2005-2017 TheBar Open Source Team

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 TheBar class Support Site:  http://www.sf.net/projects/thebar

 $Id$

***************************************************************************/

 /*
  * If this file is named 'locale.c' it is automatically
  * generated by 'FlexCat' from C_c.sd. PLEASE DO NOT EDIT!!!
  */

#include <proto/locale.h>

#include "SDI_compiler.h"
#include "debug.h"

struct FC_Type { const long ID; const char * const Str; };

const struct FC_Type _%i = { %d, %s };

static struct Catalog *TB_Catalog = NULL;

/*** Catalog functions ***/
/// tr()
const char *tr(const void *fcstr)
{
  const char *defaultstr = ((struct FC_Type *)fcstr)->Str;

  if(LocaleBase)
    return (const char *)GetCatalogStr(TB_Catalog, ((struct FC_Type *)fcstr)->ID, (STRPTR)defaultstr);

  return defaultstr;
}
///
/// CloseCat()
void CloseCat(void)
{
  ENTER();

  if(TB_Catalog)
  {
    CloseCatalog(TB_Catalog);
    TB_Catalog = NULL;
  }

  LEAVE();
}
///
/// OpenCat(void)
BOOL OpenCat(void)
{
  static const struct TagItem tags[] = {
                                         { OC_BuiltInLanguage, (IPTR)%l },
                                         { OC_Version,         %v },
                                         { TAG_DONE,           0 }
                                       };

  ENTER();

  if(LocaleBase && TB_Catalog == NULL)
    TB_Catalog = OpenCatalogA(NULL, (STRPTR)"%b.catalog", (struct TagItem *)&tags[0]);

  RETURN((BOOL)(TB_Catalog != NULL));
  return (BOOL)(TB_Catalog != NULL);
}
///
/// LocalizeArray
void LocalizeArray(STRPTR *strings, const void **ids)
{
  while(*ids != NULL)
    *strings++ = (STRPTR)tr(*ids++);

  // make sure the translated string array is NULL terminated
  *strings = NULL;
}
///
